// <auto-generated />
using System;
using DataPlanning.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DataPlanning.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20180606181444_approval-setup")]
    partial class approvalsetup
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.0-rtm-30799")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DataPlanning.Data.ApprovalGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsCommander");

                    b.Property<bool>("IsLocal");

                    b.Property<string>("Label");

                    b.HasKey("Id");

                    b.ToTable("ApprovalGroup");
                });

            modelBuilder.Entity("DataPlanning.Data.Approver", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ApprovalGroupId");

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("ApprovalGroupId");

                    b.HasIndex("UserId");

                    b.ToTable("Approver");
                });

            modelBuilder.Entity("DataPlanning.Data.Attachment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateUploaded");

                    b.Property<string>("File");

                    b.Property<string>("Path");

                    b.Property<int>("RequestId");

                    b.Property<string>("Url");

                    b.HasKey("Id");

                    b.HasIndex("RequestId");

                    b.ToTable("Attachment");
                });

            modelBuilder.Entity("DataPlanning.Data.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BucketId");

                    b.Property<double>("Cost");

                    b.Property<string>("Name");

                    b.Property<int>("Quantity");

                    b.Property<int>("RequestId");

                    b.HasKey("Id");

                    b.HasIndex("BucketId");

                    b.HasIndex("RequestId");

                    b.ToTable("Item");
                });

            modelBuilder.Entity("DataPlanning.Data.ItemGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BucketCategoryId");

                    b.Property<int?>("ItemGroupCategoryId");

                    b.Property<int>("RequestId");

                    b.HasKey("Id");

                    b.HasIndex("ItemGroupCategoryId");

                    b.HasIndex("RequestId");

                    b.ToTable("ItemGroup");
                });

            modelBuilder.Entity("DataPlanning.Data.ItemGroupApproval", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ApprovalGroupId");

                    b.Property<int?>("ApproverId");

                    b.Property<DateTime?>("DateApproved");

                    b.Property<bool>("IsApproved");

                    b.Property<bool>("IsPostponed");

                    b.Property<bool>("IsRejected");

                    b.Property<int>("ItemGroupId");

                    b.Property<DateTime?>("PostponedUntil");

                    b.HasKey("Id");

                    b.HasIndex("ApprovalGroupId");

                    b.HasIndex("ApproverId");

                    b.HasIndex("ItemGroupId");

                    b.ToTable("ItemGroupApproval");
                });

            modelBuilder.Entity("DataPlanning.Data.ItemGroupCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Label");

                    b.HasKey("Id");

                    b.ToTable("ItemGroupCategory");
                });

            modelBuilder.Entity("DataPlanning.Data.LogUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SiteId");

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("SiteId");

                    b.HasIndex("UserId");

                    b.ToTable("LogUser");
                });

            modelBuilder.Entity("DataPlanning.Data.Priority", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Label");

                    b.HasKey("Id");

                    b.ToTable("Priority");
                });

            modelBuilder.Entity("DataPlanning.Data.Request", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AuthorizedRegulation");

                    b.Property<DateTime>("DateSubmitted");

                    b.Property<Guid>("Guid");

                    b.Property<bool>("IsRecurring");

                    b.Property<DateTime>("LastModified");

                    b.Property<int>("PriorityId");

                    b.Property<DateTime?>("RenewalDate");

                    b.Property<int>("RequestorId");

                    b.Property<string>("Requirement");

                    b.Property<int>("SiteId");

                    b.Property<string>("Subject");

                    b.HasKey("Id");

                    b.HasIndex("PriorityId");

                    b.HasIndex("RequestorId");

                    b.HasIndex("SiteId");

                    b.ToTable("Request");
                });

            modelBuilder.Entity("DataPlanning.Data.Site", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Site");
                });

            modelBuilder.Entity("DataPlanning.Data.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email");

                    b.Property<Guid>("Guid");

                    b.Property<bool>("IsAdmin");

                    b.Property<string>("Username");

                    b.HasKey("Id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("DataPlanning.Data.Approver", b =>
                {
                    b.HasOne("DataPlanning.Data.ApprovalGroup", "ApprovalGroup")
                        .WithMany("Approvers")
                        .HasForeignKey("ApprovalGroupId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("DataPlanning.Data.User", "User")
                        .WithMany("Approvers")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("DataPlanning.Data.Attachment", b =>
                {
                    b.HasOne("DataPlanning.Data.Request", "Request")
                        .WithMany("Attachments")
                        .HasForeignKey("RequestId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("DataPlanning.Data.Item", b =>
                {
                    b.HasOne("DataPlanning.Data.ItemGroup", "Bucket")
                        .WithMany("Items")
                        .HasForeignKey("BucketId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("DataPlanning.Data.Request", "Request")
                        .WithMany("Items")
                        .HasForeignKey("RequestId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("DataPlanning.Data.ItemGroup", b =>
                {
                    b.HasOne("DataPlanning.Data.ItemGroupCategory", "ItemGroupCategory")
                        .WithMany("ItemGroups")
                        .HasForeignKey("ItemGroupCategoryId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("DataPlanning.Data.Request", "Request")
                        .WithMany("ItemGroups")
                        .HasForeignKey("RequestId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("DataPlanning.Data.ItemGroupApproval", b =>
                {
                    b.HasOne("DataPlanning.Data.ApprovalGroup", "ApprovalGroup")
                        .WithMany("ItemGroupApprovals")
                        .HasForeignKey("ApprovalGroupId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("DataPlanning.Data.Approver", "Approver")
                        .WithMany("ItemGroupApprovals")
                        .HasForeignKey("ApproverId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("DataPlanning.Data.ItemGroup", "ItemGroup")
                        .WithMany("ItemGroupApprovals")
                        .HasForeignKey("ItemGroupId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("DataPlanning.Data.LogUser", b =>
                {
                    b.HasOne("DataPlanning.Data.Site")
                        .WithMany("LogUsers")
                        .HasForeignKey("SiteId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("DataPlanning.Data.User")
                        .WithMany("LogUsers")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("DataPlanning.Data.Request", b =>
                {
                    b.HasOne("DataPlanning.Data.Priority", "Priority")
                        .WithMany("Requests")
                        .HasForeignKey("PriorityId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("DataPlanning.Data.User", "Requestor")
                        .WithMany("Requests")
                        .HasForeignKey("RequestorId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("DataPlanning.Data.Site", "Site")
                        .WithMany("Requests")
                        .HasForeignKey("SiteId")
                        .OnDelete(DeleteBehavior.Restrict);
                });
#pragma warning restore 612, 618
        }
    }
}
